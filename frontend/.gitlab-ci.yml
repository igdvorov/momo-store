include:
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

stages:
  - frontend-artifact
  - test
  - build
  - release

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  SAST_EXCLUDED_ANALYZERS: "spotbugs, gosec-sast"

make-artifacts:
  stage: frontend-artifact
  image: node:15.14.0-alpine3.13
  script:
    - cd frontend
    - npm install
    - NODE_ENV=/ VUE_APP_API_URL=/ npm run build
    - mkdir momo-store-${VERSION}
    - cp -r dist momo-store-${VERSION}/
  artifacts:
    paths:
      - ${CI_PROJECT_DIR}/frontend/momo-store-${VERSION}/

sonarqube-frontend-sast: #SonarQube frontend SAST test
  stage: test
  image: sonarsource/sonar-scanner-cli
  script:
    - cd frontend
    - >
      sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectKey=${SONAR_PROJECT_FRONTEND_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}
  dependencies:
    - make-artifacts

build-frontend:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
  dependencies:
    - make-artifacts

upload-frontend-latest:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: release
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/momo-frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/momo-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-frontend:latest
  dependencies:
    - make-artifacts
